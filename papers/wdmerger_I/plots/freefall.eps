%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot_freefall.eps
%%Creator: gnuplot 4.4 patchlevel 4
%%CreationDate: Tue Nov  6 00:41:29 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 284 213
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot_freefall.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 4)
  /Author (mkatz)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Nov  6 00:41:29 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 284 50 lineto 284 213 lineto 50 213 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 588 M
63 0 V
3678 0 R
-63 0 V
stroke
602 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
686 842 M
63 0 V
3678 0 R
-63 0 V
stroke
602 842 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
686 1097 M
63 0 V
3678 0 R
-63 0 V
stroke
602 1097 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
686 1351 M
63 0 V
3678 0 R
-63 0 V
stroke
602 1351 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MRshow
1.000 UL
LTb
686 1606 M
63 0 V
3678 0 R
-63 0 V
stroke
602 1606 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
686 1860 M
63 0 V
3678 0 R
-63 0 V
stroke
602 1860 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
686 2115 M
63 0 V
3678 0 R
-63 0 V
stroke
602 2115 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
686 2369 M
63 0 V
3678 0 R
-63 0 V
stroke
602 2369 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MRshow
1.000 UL
LTb
686 2624 M
63 0 V
3678 0 R
-63 0 V
stroke
602 2624 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
686 2878 M
63 0 V
3678 0 R
-63 0 V
stroke
602 2878 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MRshow
1.000 UL
LTb
4427 588 M
0 63 V
0 2456 R
0 -63 V
stroke
4427 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
3679 588 M
0 63 V
0 2456 R
0 -63 V
stroke
3679 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
2931 588 M
0 63 V
0 2456 R
0 -63 V
stroke
2931 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
2182 588 M
0 63 V
0 2456 R
0 -63 V
stroke
2182 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
1434 588 M
0 63 V
0 2456 R
0 -63 V
stroke
1434 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
686 588 M
0 63 V
0 2456 R
0 -63 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
686 3107 N
686 588 L
3741 0 V
0 2519 V
-3741 0 V
Z stroke
LCb setrgbcolor
112 1847 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 ( t / t)]
[(Helvetica) 112.0 -42.0 true true 0 (ff)]
[(Helvetica) 140.0 0.0 true true 0 ( )]
] -32.7 MCshow
grestore
LTb
LCb setrgbcolor
2556 238 M
[ [(Helvetica) 140.0 0.0 true true 0 ( r / r)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
[(Helvetica) 140.0 0.0 true true 0 ( )]
] -32.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
3.000 UL
LT0
0.00 0.00 1.00 C LCb setrgbcolor
3776 861 M
[ [(Helvetica) 140.0 0.0 true true 0 (Analytical Solution)]
] -46.7 MRshow
LT0
0.00 0.00 1.00 C 3860 861 M
399 0 V
4125 3107 M
-7 -1 V
-10 -1 V
-9 -1 V
-10 -2 V
-9 -1 V
-9 -1 V
-10 -2 V
-9 -1 V
-9 -1 V
-10 -2 V
-9 -1 V
-10 -1 V
-9 -2 V
-9 -1 V
-10 -2 V
-9 -1 V
-9 -2 V
-10 -1 V
-9 -2 V
-10 -2 V
-9 -1 V
-9 -2 V
-10 -1 V
-9 -2 V
-9 -2 V
-10 -1 V
-9 -2 V
-10 -2 V
-9 -1 V
-9 -2 V
-10 -2 V
-9 -2 V
-9 -1 V
-10 -2 V
-9 -2 V
-10 -2 V
-9 -2 V
-9 -2 V
-10 -1 V
-9 -2 V
-9 -2 V
-10 -2 V
-9 -2 V
-10 -2 V
-9 -2 V
-9 -2 V
-10 -2 V
-9 -2 V
-9 -2 V
-10 -2 V
-9 -2 V
-10 -2 V
-9 -2 V
-9 -3 V
-10 -2 V
-9 -2 V
-9 -2 V
-10 -2 V
-9 -2 V
-10 -3 V
-9 -2 V
-9 -2 V
-10 -2 V
-9 -3 V
-9 -2 V
-10 -2 V
-9 -3 V
-10 -2 V
-9 -2 V
-9 -3 V
-10 -2 V
-9 -2 V
-9 -3 V
-10 -2 V
-9 -3 V
-10 -2 V
-9 -3 V
-9 -2 V
-10 -3 V
-9 -2 V
-9 -3 V
-10 -2 V
-9 -3 V
-10 -2 V
-9 -3 V
-9 -3 V
-10 -2 V
-9 -3 V
-9 -3 V
-10 -2 V
-9 -3 V
-10 -3 V
-9 -2 V
-9 -3 V
-10 -3 V
-9 -3 V
-9 -3 V
-10 -2 V
-9 -3 V
-10 -3 V
-9 -3 V
-9 -3 V
stroke 3171 2896 M
-10 -3 V
-9 -3 V
-10 -3 V
-9 -2 V
-9 -3 V
-10 -3 V
-9 -3 V
-9 -3 V
-10 -3 V
-9 -3 V
-10 -4 V
-9 -3 V
-9 -3 V
-10 -3 V
-9 -3 V
-9 -3 V
-10 -3 V
-9 -3 V
-10 -4 V
-9 -3 V
-9 -3 V
-10 -3 V
-9 -4 V
-9 -3 V
-10 -3 V
-9 -3 V
-10 -4 V
-9 -3 V
-9 -4 V
-10 -3 V
-9 -3 V
-9 -4 V
-10 -3 V
-9 -4 V
-10 -3 V
-9 -4 V
-9 -3 V
-10 -4 V
-9 -3 V
-9 -4 V
-10 -3 V
-9 -4 V
-10 -3 V
-9 -4 V
-9 -4 V
-10 -3 V
-9 -4 V
-9 -4 V
-10 -4 V
-9 -3 V
-10 -4 V
-9 -4 V
-9 -4 V
-10 -3 V
-9 -4 V
-9 -4 V
-10 -4 V
-9 -4 V
-10 -4 V
-9 -4 V
-9 -4 V
-10 -4 V
-9 -4 V
-9 -4 V
-10 -4 V
-9 -4 V
-10 -4 V
-9 -4 V
-9 -4 V
-10 -4 V
-9 -4 V
-9 -5 V
-10 -4 V
-9 -4 V
-10 -4 V
-9 -5 V
-9 -4 V
-10 -4 V
-9 -5 V
-9 -4 V
-10 -4 V
-9 -5 V
-10 -4 V
-9 -5 V
-9 -4 V
-10 -5 V
-9 -4 V
-9 -5 V
-10 -4 V
-9 -5 V
-10 -4 V
-9 -5 V
-9 -5 V
-10 -4 V
-9 -5 V
-9 -5 V
-10 -4 V
-9 -5 V
-10 -5 V
-9 -5 V
-9 -5 V
-10 -5 V
-9 -4 V
-9 -5 V
stroke 2196 2498 M
-10 -5 V
-9 -5 V
-10 -5 V
-9 -5 V
-9 -5 V
-10 -5 V
-9 -6 V
-9 -5 V
-10 -5 V
-9 -5 V
-10 -5 V
-9 -6 V
-9 -5 V
-10 -5 V
-9 -5 V
-9 -6 V
-10 -5 V
-9 -6 V
-10 -5 V
-9 -5 V
-9 -6 V
-10 -6 V
-9 -5 V
-9 -6 V
-10 -5 V
-9 -6 V
-10 -6 V
-9 -5 V
-9 -6 V
-10 -6 V
-9 -6 V
-10 -6 V
-9 -6 V
-9 -5 V
-10 -6 V
-9 -6 V
-9 -6 V
-10 -7 V
-9 -6 V
-10 -6 V
-9 -6 V
-9 -6 V
-10 -6 V
-9 -7 V
-9 -6 V
-10 -6 V
-9 -7 V
-10 -6 V
-9 -7 V
-9 -6 V
-10 -7 V
-9 -6 V
-9 -7 V
-10 -7 V
-9 -6 V
-10 -7 V
-9 -7 V
-9 -7 V
-10 -7 V
-9 -7 V
-9 -7 V
-10 -7 V
-9 -7 V
-10 -7 V
-9 -7 V
-9 -7 V
-10 -8 V
-9 -7 V
-9 -7 V
-10 -8 V
-9 -7 V
-10 -8 V
-9 -7 V
-9 -8 V
-10 -8 V
-9 -8 V
-9 -7 V
-10 -8 V
-9 -8 V
-10 -8 V
-9 -8 V
-9 -9 V
-10 -8 V
-9 -8 V
-9 -8 V
-10 -9 V
-9 -8 V
-10 -9 V
-9 -8 V
-9 -9 V
-10 -9 V
-9 -9 V
-9 -9 V
-10 -9 V
-9 -9 V
-10 -9 V
-9 -9 V
-9 -9 V
-10 -10 V
-9 -9 V
-9 -10 V
-10 -10 V
-9 -9 V
-10 -10 V
stroke 1220 1783 M
-9 -10 V
-9 -10 V
-10 -11 V
-9 -10 V
-9 -10 V
-10 -11 V
-9 -11 V
-10 -10 V
-9 -11 V
-9 -11 V
-10 -12 V
-9 -11 V
-9 -11 V
-10 -12 V
-9 -12 V
-10 -12 V
-9 -12 V
-9 -12 V
-10 -12 V
-9 -13 V
-9 -13 V
-10 -13 V
-9 -13 V
-10 -13 V
-9 -14 V
-9 -14 V
-10 -14 V
-9 -14 V
-9 -15 V
-10 -15 V
-9 -15 V
-10 -16 V
-9 -15 V
-9 -17 V
-10 -16 V
-9 -17 V
-9 -18 V
-10 -18 V
-9 -18 V
-10 -19 V
-9 -20 V
-9 -20 V
-10 -21 V
-9 -21 V
-9 -23 V
-10 -24 V
-9 -24 V
-10 -26 V
-9 -28 V
-9 -29 V
742 984 L
-9 -34 V
-9 -38 V
714 869 L
-9 -52 V
695 750 L
686 588 L
% End plot #1
% Begin plot #2
1.000 UP
stroke
1.500 UL
LT1
LCb setrgbcolor
3776 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (CASTRO Solution)]
] -46.7 MRshow
LT1
686 588 Circle
686 614 Circle
687 642 Circle
689 673 Circle
691 708 Circle
695 746 Circle
700 787 Circle
707 830 Circle
715 870 Circle
723 910 Circle
733 949 Circle
743 987 Circle
756 1029 Circle
771 1072 Circle
786 1115 Circle
803 1157 Circle
821 1199 Circle
840 1240 Circle
860 1281 Circle
881 1320 Circle
901 1357 Circle
923 1393 Circle
943 1426 Circle
966 1461 Circle
990 1498 Circle
1016 1534 Circle
1040 1567 Circle
1065 1600 Circle
1092 1634 Circle
1121 1669 Circle
1153 1707 Circle
1187 1745 Circle
1222 1782 Circle
1258 1820 Circle
1296 1858 Circle
1333 1894 Circle
1372 1930 Circle
1413 1967 Circle
1457 2005 Circle
1499 2040 Circle
1542 2074 Circle
1585 2108 Circle
1630 2142 Circle
1675 2175 Circle
1722 2209 Circle
1769 2241 Circle
1819 2274 Circle
1869 2306 Circle
1921 2339 Circle
1974 2371 Circle
2022 2399 Circle
2069 2426 Circle
2117 2453 Circle
2170 2482 Circle
2230 2513 Circle
2295 2546 Circle
2356 2576 Circle
2420 2607 Circle
2486 2637 Circle
2559 2669 Circle
2631 2699 Circle
2707 2730 Circle
2789 2762 Circle
2875 2794 Circle
2974 2830 Circle
3088 2867 Circle
3215 2907 Circle
3357 2948 Circle
3509 2987 Circle
3672 3026 Circle
3845 3064 Circle
4019 3101 Circle
4059 721 Circle
% End plot #2
1.000 UL
LTb
686 3107 N
686 588 L
3741 0 V
0 2519 V
-3741 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
